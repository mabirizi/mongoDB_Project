{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Desktop/mongoDB_Product/src/pages/Product/EditProduct.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './EditProduct.css';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nclass ProductEditPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      title: '',\n      price: '',\n      imageUrl: '',\n      description: ''\n    };\n\n    this.editProductHandler = event => {\n      event.preventDefault();\n\n      if (this.state.title.trim() === '' || this.state.price.trim() === '' || this.state.imageUrl.trim() === '' || this.state.description.trim() === '') {\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      const productData = {\n        name: this.state.title,\n        price: parseFloat(this.state.price),\n        image: this.state.imageUrl,\n        description: this.state.description\n      };\n      let request;\n\n      if (this.props.match.params.mode === 'edit') {\n        request = axios.patch('http://localhost:3100/products/' + this.props.match.params.id, productData);\n      } else {\n        request = axios.post('http://localhost:3100/products', productData);\n      }\n\n      request.then(result => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.replace('/products');\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(err);\n        this.props.onError('Editing or adding the product failed. Please try again later');\n      });\n    };\n\n    this.inputChangeHandler = (event, input) => {\n      this.setState({\n        [input]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Will be \"edit\" or \"add\"\n    if (this.props.match.params.mode === 'edit') {\n      axios.get('http://localhost:3100/products/' + this.props.match.params.id).then(productResponse => {\n        const product = productResponse.data;\n        this.setState({\n          isLoading: false,\n          title: product.name,\n          price: product.price.toString(),\n          imageUrl: product.image,\n          description: product.description\n        });\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(err);\n      });\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    let content = React.createElement(\"form\", {\n      className: \"edit-product__form\",\n      onSubmit: this.editProductHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"Title\",\n      config: {\n        type: 'text',\n        value: this.state.title\n      },\n      onChange: event => this.inputChangeHandler(event, 'title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: \"Price\",\n      config: {\n        type: 'number',\n        value: this.state.price\n      },\n      onChange: event => this.inputChangeHandler(event, 'price'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: \"Image URL\",\n      config: {\n        type: 'text',\n        value: this.state.imageUrl\n      },\n      onChange: event => this.inputChangeHandler(event, 'imageUrl'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: \"Description\",\n      elType: \"textarea\",\n      config: {\n        rows: '5',\n        value: this.state.description\n      },\n      onChange: event => this.inputChangeHandler(event, 'description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.match.params.mode === 'add' ? 'Create Product' : 'Update Product'));\n\n    if (this.state.isLoading) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Is loading...\");\n    }\n\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nexport default ProductEditPage;","map":{"version":3,"sources":["/home/ahmed/Desktop/mongoDB_Product/src/pages/Product/EditProduct.js"],"names":["React","Component","axios","Input","Button","ProductEditPage","state","isLoading","title","price","imageUrl","description","editProductHandler","event","preventDefault","trim","setState","productData","name","parseFloat","image","request","props","match","params","mode","patch","id","post","then","result","history","replace","catch","err","console","log","onError","inputChangeHandler","input","target","value","componentDidMount","get","productResponse","product","data","toString","render","content","type","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './EditProduct.css';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nclass ProductEditPage extends Component {\n  state = {\n    isLoading: true,\n    title: '',\n    price: '',\n    imageUrl: '',\n    description: ''\n  };\n\n  componentDidMount() {\n    // Will be \"edit\" or \"add\"\n    if (this.props.match.params.mode === 'edit') {\n      axios\n        .get('http://localhost:3100/products/' + this.props.match.params.id)\n        .then(productResponse => {\n          const product = productResponse.data;\n          this.setState({\n            isLoading: false,\n            title: product.name,\n            price: product.price.toString(),\n            imageUrl: product.image,\n            description: product.description\n          });\n        })\n        .catch(err => {\n          this.setState({ isLoading: false });\n          console.log(err);\n        });\n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  editProductHandler = event => {\n    event.preventDefault();\n    if (\n      this.state.title.trim() === '' ||\n      this.state.price.trim() === '' ||\n      this.state.imageUrl.trim() === '' ||\n      this.state.description.trim() === ''\n    ) {\n      return;\n    }\n    this.setState({ isLoading: true });\n    const productData = {\n      name: this.state.title,\n      price: parseFloat(this.state.price),\n      image: this.state.imageUrl,\n      description: this.state.description\n    };\n    let request;\n    if (this.props.match.params.mode === 'edit') {\n      request = axios.patch(\n        'http://localhost:3100/products/' + this.props.match.params.id,\n        productData\n      );\n    } else {\n      request = axios.post('http://localhost:3100/products', productData);\n    }\n    request\n      .then(result => {\n        this.setState({ isLoading: false });\n        this.props.history.replace('/products');\n      })\n      .catch(err => {\n        this.setState({ isLoading: false });\n        console.log(err);\n        this.props.onError(\n          'Editing or adding the product failed. Please try again later'\n        );\n      });\n  };\n\n  inputChangeHandler = (event, input) => {\n    this.setState({ [input]: event.target.value });\n  };\n\n  render() {\n    let content = (\n      <form className=\"edit-product__form\" onSubmit={this.editProductHandler}>\n        <Input\n          label=\"Title\"\n          config={{ type: 'text', value: this.state.title }}\n          onChange={event => this.inputChangeHandler(event, 'title')}\n        />\n        <Input\n          label=\"Price\"\n          config={{ type: 'number', value: this.state.price }}\n          onChange={event => this.inputChangeHandler(event, 'price')}\n        />\n        <Input\n          label=\"Image URL\"\n          config={{ type: 'text', value: this.state.imageUrl }}\n          onChange={event => this.inputChangeHandler(event, 'imageUrl')}\n        />\n        <Input\n          label=\"Description\"\n          elType=\"textarea\"\n          config={{ rows: '5', value: this.state.description }}\n          onChange={event => this.inputChangeHandler(event, 'description')}\n        />\n        <Button type=\"submit\">\n          {this.props.match.params.mode === 'add'\n            ? 'Create Product'\n            : 'Update Product'}\n        </Button>\n      </form>\n    );\n    if (this.state.isLoading) {\n      content = <p>Is loading...</p>;\n    }\n    return <main>{content}</main>;\n  }\n}\n\nexport default ProductEditPage;\n"]},"metadata":{},"sourceType":"module"}