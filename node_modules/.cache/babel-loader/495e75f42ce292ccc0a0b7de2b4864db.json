{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/Desktop/mongoDB_Product/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport ProductsPage from './pages/Product/Products';\nimport ProductPage from './pages/Product/Product';\nimport EditProductPage from './pages/Product/EditProduct';\nimport AuthPage from './pages/Auth/Auth';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuth: true,\n      authMode: 'login',\n      error: null\n    };\n\n    this.logoutHandler = () => {\n      this.setState({\n        isAuth: false\n      });\n    };\n\n    this.authHandler = (event, authData) => {\n      event.preventDefault();\n\n      if (authData.email.trim() === '' || authData.password.trim() === '') {\n        return;\n      }\n\n      let request;\n\n      if (this.state.authMode === 'login') {\n        request = axios.post('http://localhost:3100/login', authData);\n      } else {\n        request = axios.post('http://localhost:3100/signup', authData);\n      }\n\n      request.then(authResponse => {\n        if (authResponse.status === 201 || authResponse.status === 200) {\n          const token = authResponse.data.token;\n          console.log(token); // Theoretically, you would now store the token in localstorage + app state\n          // and use it for subsequent requests to protected backend resources\n\n          this.setState({\n            isAuth: true\n          });\n        }\n      }).catch(err => {\n        this.errorHandler(err.response.data.message);\n        console.log(err);\n        this.setState({\n          isAuth: false\n        });\n      });\n    };\n\n    this.authModeChangedHandler = () => {\n      this.setState(prevState => {\n        return {\n          authMode: prevState.authMode === 'login' ? 'signup' : 'login'\n        };\n      });\n    };\n\n    this.errorHandler = message => {\n      this.setState({\n        error: message\n      });\n    };\n  }\n\n  render() {\n    let routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/products\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/auth\",\n      to: \"/products\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/signup\",\n      to: \"/products\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/product/:mode\",\n      render: props => React.createElement(EditProductPage, Object.assign({}, props, {\n        onError: this.errorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/products/:id/:mode\",\n      render: props => React.createElement(EditProductPage, Object.assign({}, props, {\n        onError: this.errorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/products/:id\",\n      render: props => React.createElement(ProductPage, Object.assign({}, props, {\n        onError: this.errorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/products\",\n      render: props => React.createElement(ProductsPage, Object.assign({}, props, {\n        onError: this.errorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n\n    if (!this.state.isAuth) {\n      routes = React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        from: \"/\",\n        to: \"/auth\",\n        exact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"/products\",\n        to: \"/auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"/product\",\n        to: \"/auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/auth\",\n        render: () => React.createElement(AuthPage, {\n          mode: this.state.authMode,\n          onAuth: this.authHandler,\n          onAuthModeChange: this.authModeChangedHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: !!this.state.error,\n      title: \"An Error Occurred\",\n      onClose: () => this.errorHandler(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.error)), React.createElement(Backdrop, {\n      show: !!this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Header, {\n      authenticated: this.state.isAuth,\n      onLogout: this.logoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), routes);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ahmed/Desktop/mongoDB_Product/src/App.js"],"names":["React","Component","Switch","Route","Redirect","axios","Header","Modal","Backdrop","ProductsPage","ProductPage","EditProductPage","AuthPage","App","state","isAuth","authMode","error","logoutHandler","setState","authHandler","event","authData","preventDefault","email","trim","password","request","post","then","authResponse","status","token","data","console","log","catch","err","errorHandler","response","message","authModeChangedHandler","prevState","render","routes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport ProductsPage from './pages/Product/Products';\nimport ProductPage from './pages/Product/Product';\nimport EditProductPage from './pages/Product/EditProduct';\nimport AuthPage from './pages/Auth/Auth';\n\nclass App extends Component {\n  state = {\n    isAuth: true,\n    authMode: 'login',\n    error: null\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false });\n  };\n\n  authHandler = (event, authData) => {\n    event.preventDefault();\n    if (authData.email.trim() === '' || authData.password.trim() === '') {\n      return;\n    }\n    let request;\n    if (this.state.authMode === 'login') {\n      request = axios.post('http://localhost:3100/login', authData);\n    } else {\n      request = axios.post('http://localhost:3100/signup', authData);\n    }\n    request\n      .then(authResponse => {\n        if (authResponse.status === 201 || authResponse.status === 200) {\n          const token = authResponse.data.token;\n          console.log(token);\n          // Theoretically, you would now store the token in localstorage + app state\n          // and use it for subsequent requests to protected backend resources\n          this.setState({ isAuth: true });\n        }\n      })\n      .catch(err => {\n        this.errorHandler(err.response.data.message);\n        console.log(err);\n        this.setState({ isAuth: false });\n      });\n  };\n\n  authModeChangedHandler = () => {\n    this.setState(prevState => {\n      return {\n        authMode: prevState.authMode === 'login' ? 'signup' : 'login'\n      };\n    });\n  };\n\n  errorHandler = message => {\n    this.setState({\n      error: message\n    });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Redirect from=\"/\" to=\"/products\" exact />\n        <Redirect from=\"/auth\" to=\"/products\" exact />\n        <Redirect from=\"/signup\" to=\"/products\" exact />\n        <Route\n          path=\"/product/:mode\"\n          render={props => (\n            <EditProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products/:id/:mode\"\n          render={props => (\n            <EditProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products/:id\"\n          render={props => (\n            <ProductPage {...props} onError={this.errorHandler} />\n          )}\n        />\n        <Route\n          path=\"/products\"\n          render={props => (\n            <ProductsPage {...props} onError={this.errorHandler} />\n          )}\n        />\n      </Switch>\n    );\n\n    if (!this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Redirect from=\"/\" to=\"/auth\" exact />\n          <Redirect from=\"/products\" to=\"/auth\" />\n          <Redirect from=\"/product\" to=\"/auth\" />\n          <Route\n            path=\"/auth\"\n            render={() => (\n              <AuthPage\n                mode={this.state.authMode}\n                onAuth={this.authHandler}\n                onAuthModeChange={this.authModeChangedHandler}\n              />\n            )}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Modal\n          open={!!this.state.error}\n          title=\"An Error Occurred\"\n          onClose={() => this.errorHandler(null)}\n        >\n          <p>{this.state.error}</p>\n        </Modal>\n        <Backdrop show={!!this.state.error} />\n        <Header\n          authenticated={this.state.isAuth}\n          onLogout={this.logoutHandler}\n        />\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}